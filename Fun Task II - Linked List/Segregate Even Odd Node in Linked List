Node* segregate(Node* head){
  if(!head || !head->next) return head;
  Node* oddHead = new Node(-1);
  Node* oddTail = oddHead;
  Node* evenHead = new Node(-1);
  Node* evenTail = evenHead;
  Node* temp = head;
  while(temp){
    if(temp->val % 2 == 0){
      evenTail->next = temp;
      evenTail = evenTail->next;
    }
    else{
      oddTail->next = temp;
      oddTail = oddTail->next;
    }
    temp = temp->next;
  }
  evenTail->next = oddHead->next;
  return evenHead->next;
}
