Node* midLL(Node* head){
  if(!head || !head->next) return head;
  Node* slow = head;
  Node* fast = head;
  while(fast->next && fast->next->next){
    slow = slow->next;
    fast = fast->next->next;
  }
  return slow;
}

Node* reverse(Node* head){
  if(!head || !head->next) return head;
  Node* prev = NULL;
  Node* curr = head;
  Node* nxt = NULL;
  while(curr){
    nxt = curr->next;
    curr->next = prev;
    prev = curr;
    curr = nxt;
  }
  return prev;
}

void fold(Node *head){
  if(!head | !head->next) return; 
  Node *m = midLL(head);
  Node *nhead = m->next;
  m->next = NULL;
  nhead = reverse(nhead);
  Node *c1 = head;
  Node *c2 = nhead;
  while(c1 && c2){
      Node *a = c1->next;
      Node *b = c2->next;
      c1->next = c2;
      c2->next = a;
      c1 = a;
      c2 = b;
  }
}
